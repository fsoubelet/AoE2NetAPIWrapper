[tool.poetry]
name = "aoe2netwrapper"
version = "0.2.0"
description = "My Python wrapper for the aoe2.net data API"
authors = ["Felix Soubelet <felix.soubelet@liverpool.ac.uk>"]
license = "MIT"

keywords = ["API", "AoE2", "Utility",]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Games/Entertainment",
    "Topic :: Utilities",
    "Typing :: Typed",
]

[tool.poetry.dependencies]
python = "^3.6"
requests = "^2.25.1"
loguru = "^0.5.3"
pydantic = "^1.7.3"

[tool.poetry.dev-dependencies]
pytest = "^6.2.1"
pytest-cov = "^2.10.1"
responses = "^0.12.1"
mypy = "^0.790"
pylint = "^2.6.0"
isort = "^5.7.0"
black = "^20.8b1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


# ----- Testing Configuration ----- #

[tool.pytest.ini_options]
addopts = "--cov-report=xml --cov-report term-missing --cov-config=pyproject.toml --cov=aoe2netwrapper"
testpaths = ["tests"]

[tool.coverage.run]
source = ["aoe2netwrapper/"]

[tool.coverage.report]
ignore_errors = true


# ----- Utilities Configuration ----- #


[tool.isort]
line_length = 100
force_single_line = false
atomic = true
include_trailing_comma = true
lines_between_types = 1
use_parentheses = true
skip_glob = ["*/setup.py"]
filter_files = true
known_first_party = "aoe2netwrapper"
known_third_party = "pytest"

[tool.black]
line-length = 100
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | tests/.*/setup.py
)/
'''

[tool.pylint]
    [tool.pylint.master]
    jobs="1"    # Auto-detect the number of processors
    ignore-patterns='''
        \.eggs
        |\.git
        |build
        |dist
        |conf.py
    '''
    persistent="no"
    load-plugins=""
    limit-inference-results="100"
    suggestion-mode="yes"
    unsafe-load-any-extension="no"
    extension-pkg-whitelist=""
    exit-zero="no"
    from-stdin="no"

    [tool.pylint.messages_control]
    disable = [
        "attribute-defined-outside-init",
        "bad-continuation",
        "expression-not-assigned",
        "invalid-name",
        "import-error",
        "logging-format-interpolation",
        "protected-access",
        "too-few-public-methods",
        "too-many-instance-attributes",
        "format",  # handled by black
    ]

    [tool.pylint.reports]
    output-format="text"
    msg-template="{path}:{line}:{column}: Pylint: {msg}. [{msg_id}: {symbol}]"

    [tool.pylint.basic]
    argument-naming-style="snake_case"
    attr-naming-style="snake_case"
    class-attribute-naming-style="snake_case"
    class-naming-style="PascalCase"
    const-naming-style="UPPER_CASE"
    function-naming-style="snake_case"
    inlinevar-naming-style="snake_case"
    method-naming-style="snake_case"
    module-naming-style="snake_case"
    variable-naming-style="snake_case"

    [tool.pylint.design]
    max-args="10"
    max-attributes="10"
    max-locals="15"
    max-public-methods="20"
    max-returns="5"

    [tool.pylint.'SIMILARITIES']
    ignore-comments=['yes']
    ignore-docstrings=['yes']
    ignore-imports=['no']
    min-similarity-lines=4