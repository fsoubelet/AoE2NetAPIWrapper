[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "aoe2netwrapper/__init__.py"

[tool.hatch.build.targets.sdist]
exclude = [
  "/.github",
  "/docs",
  "/tests",
]

[tool.hatch.build.targets.wheel]
packages = ["aoe2netwrapper"]

[project]
name = "aoe2netwrapper"
readme = "README.md"
description = "My Python wrapper for the aoe2.net data API"
authors = [{name = "Felix Soubelet", email = "felix.soubelet@cern.ch"},]
license = "MIT"
dynamic = ["version"]
requires-python = ">=3.9"

keywords = [
    "API",
    "AoE2",
    "Utility",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Games/Entertainment",
    "Topic :: Utilities",
    "Typing :: Typed",
]

dependencies = [
    "requests >= 2.30",
    "loguru < 1.0",
    "pydantic >= 2.5",
]

[project.optional-dependencies]
dataframe = [
    "pandas >= 2.0",
]
test = [
    "aoe2netwrapper[dataframe]",
    "pytest >= 7.0",
    "pytest-cov >= 2.9",
    "responses >= 0.20",
]
docs = [
    "numpy < 2.0",  # portray needs hug which does not have compatibility
    "portray >= 1.4",
]

all = [
    "aoe2netwrapper[test]",
    "aoe2netwrapper[docs]",
    "aoe2netwrapper[dataframe]",
]

[project.urls]
homepage = "https://github.com/fsoubelet/AoE2NetAPIWrapper"
repository = "https://github.com/fsoubelet/AoE2NetAPIWrapper"
documentation = "https://fsoubelet.github.io/AoE2NetAPIWrapper/"

# ----- Testing Configuration ----- #

[tool.pytest.ini_options]
addopts = "--cov-report=xml --cov-report term-missing --cov-config=pyproject.toml --cov=aoe2netwrapper"
testpaths = ["tests"]

[tool.coverage.run]
source = ["aoe2netwrapper/"]

[tool.coverage.report]
ignore_errors = true


# ----- Documentation Configuration ----- #

[tool.portray]
extra_markdown_extensions = [
    "admonition",
    "codehilite",
    "footnotes",
    "pymdownx.arithmatex",
    "pymdownx.betterem",
    "pymdownx.caret",
    "pymdownx.critic",
    "pymdownx.details",
    "pymdownx.inlinehilite",
    "pymdownx.magiclink",
    "pymdownx.tabbed",
    "pymdownx.tasklist",
    "pymdownx.keys",
    "pymdownx.mark",
    "pymdownx.smartsymbols",
    "pymdownx.superfences",
    "pymdownx.tasklist",
    "pymdownx.tilde"
]
modules = ["aoe2netwrapper"]

[tool.portray.mkdocs]
repo_url = "https://github.com/fsoubelet/AoE2NetAPIWrapper"
site_url = "https://fsoubelet.github.io/AoE2NetAPIWrapper/"
repo_name = "AoE2NetAPIWrapper"
extra_css = ["stylesheets/extra.css"]

[tool.portray.mkdocs.theme]
name = "material"
palette = {scheme = "slate", primary = "blue grey", accent = "amber"}

[[tool.portray.mkdocs.nav]]
Home = "README.md"

[[tool.portray.mkdocs.nav]]
"Getting Started" = "docs/Getting_Started.md"

[[tool.portray.mkdocs.nav]]
"Features" = "docs/Features.md"

# ----- Utilities Configuration ----- #

[tool.isort]
atomic = true
ensure_newline_before_comments = true
filter_files = true
force_grid_wrap = 0
force_single_line = false
include_trailing_comma = true
known_first_party = "aoe2netwrapper"
known_third_party = "pytest"
line_length = 110
lines_between_types = 1
multi_line_output = 3
use_parentheses = true

[tool.black]
line-length = 110
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | tests/.*/setup.py
)/
'''

[tool.ruff]
line-length = 110
# Assume Python 3.9+.
target-version = "py39"
include = ["aoe2netwrapper"]

[tool.ruff.lint]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
